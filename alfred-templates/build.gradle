buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.alfred'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('com.amazonaws:aws-java-sdk-ses:1.11.263')
	compile('com.twitter:bijection-core_2.12:0.9.6')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile('org.springframework.security:spring-security-test')
}

// https://github.com/gradle/gradle-talks/blob/master/talks/polyglot-gradle/src/slides/01-polyglot-gradle.md#scala-joint-compilation-2
sourceSets {
	main {
		scala {
			srcDirs = ['src/main/scala', 'src/main/java']
		}
		java {
			srcDirs = []
		}
	}
}

test {
	testLogging.showStandardStreams = true

	testLogging {
		exceptionFormat = 'full'
		events "PASSED", "STARTED", "FAILED", "SKIPPED"
	}
}